
function dynamic_prompt {
  local BLACK="\[\033[0;30m\]"
  local BLACKBOLD="\[\033[1;30m\]"
  local RED="\[\033[0;31m\]"
  local REDBOLD="\[\033[1;31m\]"
  local GREEN="\[\033[0;32m\]"
  local GREEN_BOLD="\[\033[1;32m\]"
  local YELLOW="\[\033[0;33m\]"
  local YELLOW_BOLD="\[\033[1;33m\]"
  local BLUE="\[\033[0;34m\]"
  local BLUE_BOLD="\[\033[1;34m\]"
  local PURPLE="\[\033[0;35m\]"
  local PURPLEBOLD="\[\033[1;35m\]"
  local CYAN="\[\033[0;36m\]"
  local CYAN_BOLD="\[\033[1;36m\]"
  local WHITE="\[\033[0;37m\]"
  local WHITE_BOLD="\[\033[1;37m\]"
  local RESET_COLOR="\[\e[00m\]"

  local RED_LIGHT_BOLD="\[\033[1;91m\]"
  local GREEN_LIGHT_BOLD="\[\033[1;92m\]"

  DEFAULT_PS1="\n\u@\h:\W "

  local GIT_PS=`__git_ps_custom`
  local VENV_PS=`__virtualenv_ps_custom`
  local RBENV_PS=`__rbenv_ps_custom`
  local PYENV_PS=`__pyenv_ps_custom`

  PS1="${PYENV_PS}${RBENV_PS}${VENV_PS}${GIT_PS}${DEFAULT_PS1}"
  [ "$DEFAULT_PS1" != "$PS1" ] && PS1="---${PS1}"

  export PS1="${PS1}\$ "
}

function __git_ps_custom() {
  if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}") == '0' ]; then
    local BRANCH=""`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`

    local REPO_NAME=`[ ! -z $(git config remote.origin.url) ] && git config remote.origin.url | cut -d\: -f2 | sed -e 's/\.git//' || echo local`

    local COLOR=''
    case $BRANCH in
      master)
        COLOR=$RED_LIGHT_BOLD
        ;;
      production)
        COLOR=$YELLOW_BOLD
        ;;
      staging)
        COLOR=$CYAN_BOLD
        ;;
      *)
        COLOR=$GREEN_LIGHT_BOLD
        ;;
    esac

    # PS1="---${PS1}[${COLOR}${BRANCH}${RESET_COLOR}${WHITE_BOLD}@${REPO_NAME}${RESET_COLOR}]\n"
    echo " [${COLOR}${BRANCH}${RESET_COLOR}${WHITE_BOLD}@${REPO_NAME}${RESET_COLOR}]"
  fi
}

function __rbenv_ps_custom() {
  if [[ `rbenv version 2>/dev/null | grep -c '.ruby-version'` -gt 0 ]]; then
    local RB_VERSION=`rbenv version-name 2>/dev/null`
    if [[ -z "$RB_VERSION" ]]; then
      RB_VERSION="`rbenv version-name 2>&1 | ggrep -oP '\d+\.\d+\.\d+'`-missing"
      [[ -z "$RB_VERSION" ]] && RB_VERSION='unknown'
    fi
    echo " (${YELLOW_BOLD}ruby_${RB_VERSION}${RESET_COLOR})"
  fi

}

function __virtualenv_ps_custom() {
  local VENV=''
  # Get Virtual Env
  if [[ -n "$VIRTUAL_ENV" ]]; then
      # Strip out the path and just leave the env name
      local VENV_PATH=$(shorten_path "`dirname ${VIRTUAL_ENV}`")

      VENV="${VIRTUAL_ENV##*/}"
      VENV="${VENV_PATH}${BLUE_BOLD}${VENV}${RESET_COLOR}"
  fi
  [[ -n "$VENV" ]] && echo " [python-venv:${VENV}]"
}

function __pyenv_ps_custom() {
  local PYTHON_VERSION
  if [[ ! -z "$VIRTUAL_ENV" ]]; then
    local PYTHON_VERSION=`${VIRTUAL_ENV}/bin/python --version | tr '[:upper:]' '[:lower:]'`
    PYENV_VERSION="${YELLOW_BOLD}venv-${PYTHON_VERSION//[[:space:]]/_}${RESET_COLOR}"
  elif [[ `pyenv version 2>&1 | grep -c '.python-version'` -gt 0 ]]; then
    PYTHON_VERSION=`pyenv version-name 2>/dev/null`
    if [ -z "$PYTHON_VERSION" ]; then
      PYTHON_VERSION="`pyenv local`-missing"
    fi
    PYENV_VERSION="${YELLOW_BOLD}python_${PYTHON_VERSION}${RESET_COLOR}"
  fi

  [[ -n $PYENV_VERSION ]] && echo " ($PYENV_VERSION)"
}

function shorten_path() {
  local CURRENT_PATH="$1"
  local PATH_NODE_CHARS=${2:-3}
  local SHORT_PATH=""
  if [[ ${CURRENT_PATH:0:1} =~ ^(~|\/).* ]]; then
    SHORT_PATH=${CURRENT_PATH:0:1}
    CURRENT_PATH=$(echo $CURRENT_PATH | cut -c 2-)
  fi

  for PATH_NODE in ${CURRENT_PATH//\// }; do
    SHORT_PATH="${SHORT_PATH}${PATH_NODE:0:$PATH_NODE_CHARS}/"
  done

  echo $SHORT_PATH
}

# disable the default virtualenv prompt change
export VIRTUAL_ENV_DISABLE_PROMPT=1
export PROMPT_COMMAND="dynamic_prompt"
